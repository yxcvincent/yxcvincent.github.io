<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[戏水龙鹰]]></title>
  <subtitle><![CDATA[齐家立业平天下]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yxcvincent.github.io/"/>
  <updated>2015-01-17T13:49:17.949Z</updated>
  <id>http://yxcvincent.github.io/</id>
  
  <author>
    <name><![CDATA[Yi Xiaochun]]></name>
    <email><![CDATA[yxcvincent@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[校招的一些思考]]></title>
    <link href="http://yxcvincent.github.io/2015/01/13/%E6%A0%A1%E6%8B%9B%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
    <id>http://yxcvincent.github.io/2015/01/13/校招的一些思考/</id>
    <published>2015-01-13T12:47:50.000Z</published>
    <updated>2015-01-13T12:55:06.000Z</updated>
    <content type="html"><![CDATA[<p><em>写在前面的话：校招季来去匆匆，几家欢喜几家愁。稀稀拉拉半年过去了，转眼已经到了签卖身契的时候，本想在2014年结束战斗，终于还是拖到了2015。整理分享一下校招期间自己对职业选择的一些思考。文章并不是校招经验大汇总，也不能为读者挂油灯指明路，只是分享一些个人对选择的看法和思考，愿在理清自己思绪的同时，给予那些迷茫于职业选择的同学一些帮助。</em></p>
<h2 id="行业选择">行业选择</h2>
<p>鄙人自动化专业，万金油出身，身边的同学有去金融的，有去能源的，有去军工的，有去互联网的（尼玛还有牛人去搞赛车的），再细一点，搞互联网的这一帮子小伙伴里面，有去搜索的、有去广告的、有去O2O的、也有去手游的。所谓选对老婆幸福一生，选对行业成就一生，不能说它全无道理。</p>
<p>私以为，行业选择不仅要看“势”，还要看“时”。所谓看“时”，就是看这个行业可以保持快速发展的时间窗口。看“势”之道常为众人所道，多随科技发展、国家政策而变化，应聘者也会思虑再三而后选择；而看“时”之道往往并不像“势”那样明显，尤其在这个处处拥抱变化的世界当中，更加难以捉摸。选择行业看“时”，就是说既不能选择那种只有短期利益可图的行业，起的快衰的快，飞的高跌的惨，也不能选择那种有生之年都不一定能够有机会发展起来的行业，为自己的儿孙一辈献身当炮灰。看目前的市场，手游行业发展生猛，一夜之间一片红海，但谁能说它不会步页游的后尘，被X游在不久的未来所超越？在线教育行业持续被VC看好，却一直不温不火，没有出现具有革命性商业模式的产品，谁又能说在未来的十年内它一定能够起得来？</p>
<p>看“势”看“时”不仅在校招应聘时很重要，在今后的工作中仍然如此，错误的选择不要紧，要紧的是苦海无涯，回头是岸。</p>
<h2 id="职位选择">职位选择</h2>
<p>选择职位时，每个人心中都有一杆秤，可以选择自己喜欢的，也可以选择自己适合的，可以选择社会需要的，也可以选择胸大钱多的。但选择之前一定要掌握尽可能多的信息、看尽可能远的发展。如职位在公司内外的发展情况、职能划分、人才需求、薪资待遇、晋升路径。同时再问问自己，是否能够接受每天对着电脑码代码，是否足够外向来做一名销售代理。</p>
<p>举一些我认为是反面的案例（纯个人YY，请勿对号入座）：</p>
<ol>
<li>我不喜欢写代码，所以我要去应聘产品。咳，工作之后我发现我无法与程序猿们沟通，每次开会接受大家的鄙视。</li>
<li>我要去国企、我要做技术，成功拿到某国企IT部门的Offer。咳，工作职责是重装系统修电脑。</li>
<li>某老牌单位，有钱有户口有宿舍。咳，还没入职，部门撤了。</li>
</ol>
<p>私以为，财富的积累源自于事业的成功，事业的成功源自于能力的积累。选择一个可以快速而持久地积累能力的职业，是职业选择的一个重要指导原则。</p>
<h2 id="面试经验">面试经验</h2>
<h3 id="实习！内推！">实习！内推！</h3>
<p>实习，如果你是一个以求职为导向的研究生，那么实习对你来说是十分有必要的，它不仅可以帮助你了解不同行业、不同公司、不同职位的业务职能与日常生活，也能够给你之后的转正带来绿色通道。<br>内推，内推的作用并不是帮助你躲掉一轮笔试或几轮面试，而是获得提前的一次机会。公司招聘无法避免先入为主，许多公司也许实习转正和内推offer发完之后就不太再需要招人了。</p>
<h3 id="机会留给那些有准备的人">机会留给那些有准备的人</h3>
<p>校招季，有人从10月开始准备，做个简历，看看论坛，海投开始。有人从1月开始准备，学技术、补短板、做简历、投实习。也有人从三年前开始准备，努力积累行业知识、培养学习习惯，实习、考证、阅读、思考。那么，即使对于同等水平的两个人，女神也会更加亲睐那个做了准备的人。</p>
<p>具体不同岗位需要做哪些准备，各大论坛有许多精华帖子，欢迎移步欣赏。某师兄曾经给我一个建议：让自己的每一条经历成为一个故事。故事，人物地点背景前因后果若干条理必不可少、有逻辑、够生动则更是锦上添花，最好还能有几个坑来等待面试官深入挖掘。毕竟面试官也是人，谈笑风生气场相投，让面试在欢乐而愉悦的氛围中结束，你的offer也就不远了。记住，当你发现面试官一个不落地跳入你埋下的坑的时候，请不要笑的太暴露。</p>
<p>鄙人校招时只考虑过研发攻城狮和产品汪两个职位，因此能提供的信息有限，以上仅供参考。</p>
<h2 id="其他">其他</h2>
<p>校园招聘对我来说不仅是一次学习，也是一种成长，与面试官的交流更是难得的学习机会。分享一个最让我记忆深刻的面试问题：</p>
<p><strong>1、有没有一个观点，是你认为是正确的，而你周围的人认为是错误的？</strong>——贵荚商业产品负责人Neo</p>
<p>听到问题就懵了，一时间想不到一个我认为对而其他人都认为是错的的答案，故我的回答：<br>我不确定这个观点别人不认同，但我觉得这是我比较独特的一个想法。我认为，世界上是存在人品守恒的。你在此时的付出，必定会在未来的某个时刻有所回报；你在此处的获得，必定会造就你在未来某个时刻的失去；你在此时的失败，必定会为给你带来未来某个时刻的成功；你在此时的幸福，也必定源于过去或未来某个时刻的痛苦。</p>
<p>那个时候，我让我想到这一段话的，是我曾经在科创做学生工作的日子。当时我们部门事务性工作很多，而同学们都是怀着一腔热血而来，为了不让他们对繁琐的劳动感到厌烦，我努力地去营造团结有爱的团队文化。我们为团队每一位同学过生日，我们精心设计过好每一个男生节女生节，我们组感情建设是整个科创最频繁的。别人有时问我，为什么每次都自己贴钱请大家吃饭？何必给每个同学都过生日？为什么这么投入地去做感情建设？说实话我也答不上来，我总拿我的社工课感情建设三段论来做回答：感情文化建设决定工作态度与工作质量。终于，在我自己生日那天到来的时候，我来到办公室，全组同学全员到齐，齐唱生日歌、送礼放视频，我站在那里，感动的说不出话来，此时此刻，我终于明白，并且更加相信，曾经的付出，终会在某一个时刻得到回报。</p>
<p>也许是我的回答太过奇葩，让面试官和CEO记忆深刻，以至于终面面对CEO大人的时候，他也好奇地问我当时怎么会这样回答。后来我了解到，面试官当时正在看一本如何选人的书，我的回答match了书的point，即“相信努力，而不相信运气”，touch到了两位面试官。</p>
<p>回过头来我也在思考，什么样的人才是有素质有潜力的人？思来想去，我认为，一个人的素质可以分道和术两个方面来评价。道指内在规律，如一个人的内功；术指外在方法，如一个人的招式。映射到对人的评价中，道则指这个人内在的价值观，如志存高远、渴望成长、拥抱创新等，都是道上的亮点；术则指这个人的外在方法，如勤于阅读、善于思考等，是术上的优势。所谓道成而术精，只有道这一层面具有足够的底蕴，才能习练出精彩的招式，只有价值观端正，才能培养出良好的学习习惯，才能实现有效的知识与能力的积累。有时候我发现自己知识存量太少，能力不足，其实往更深层次去想，也许是没有养成良好的习惯，或者是没有培养出学习的意识。明白了这个道理，问题就迎刃而解了。</p>
<p>最后，非常感谢贵荚带给我收获最多的两场面试，也感谢面试官Neo在发了Offer之后仍然约我共饭，谈人生、谈未来，帮助我作出选择。贵荚是一个有文化有梦想的团队，我也很向往贵荚的食堂、贵荚的喵和贵荚的小伙伴，最后放弃贵荚也令我纠结许久，十分遗憾。</p>
<p>如果问我有没有比上面两个给我带来更大影响的面试问题，我不得不说，有。</p>
<p><strong>2、你没有没有女朋友？</strong>——阿里巴巴 梦驹<br>呵呵..阿里是一个能够给人带来好运的地方，也许我选择阿里就是因为这个原因吧，不得不说，有点任性。不过话说回来，虽有遗憾，并无后悔，既然做出了选择，就好好干！阿里的家庭互联网事业部也的确是个人感兴趣的方向，希望今后能够为营造健康快乐的家庭环境尽自己的一份力量。</p>
<h2 id="Ending">Ending</h2>
<p>校园招聘对于每一位应届毕业生都十分重要，它不仅意味着选择一份工作，选择一种待遇，更多的也是选择一条人生之路，选择一种生活方式。所谓鱼和熊掌不可兼得，选择没有对错之分，只有合适与否。发现自己的兴趣，找到自己的目标，选择一条不会让自己后悔的路。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>写在前面的话：校招季来去匆匆，几家欢喜几家愁。稀稀拉拉半年过去了，转眼已经到了签卖身契的时候，本想在2014年结束战斗，终于还是拖到了2015。整理分享一下校招期间自己对职业选择的一些思考。文章并不是校招经验大汇总，也不能为读者挂油灯指明路，只是分享一些个人对选择的]]>
    </summary>
    
      <category term="校招" scheme="http://yxcvincent.github.io/tags/%E6%A0%A1%E6%8B%9B/"/>
    
      <category term="阿里巴巴" scheme="http://yxcvincent.github.io/tags/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/"/>
    
      <category term="豌豆荚" scheme="http://yxcvincent.github.io/tags/%E8%B1%8C%E8%B1%86%E8%8D%9A/"/>
    
      <category term="生活" scheme="http://yxcvincent.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MEAN的安装与配置]]></title>
    <link href="http://yxcvincent.github.io/2015/01/12/MEAN%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://yxcvincent.github.io/2015/01/12/MEAN的安装与配置/</id>
    <published>2015-01-12T13:09:37.000Z</published>
    <updated>2015-01-17T13:48:49.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>最近尝试接触Web后端技术，看了看基于Java、Python、Nodejs的各种框架，最终选择了MEAN架构进行学习，理由主要包括三个方面：</p>
<ol>
<li>轻量级，入门门槛低。</li>
<li>框架成熟，可参考资料多。</li>
<li>可以一并学习Angular和Mongodb。</li>
</ol>
<p>本次学习历时12天，产出物是一个简单的用户管理系统。这篇博客将会记录我在MEAN的安装配置过程中的一些操作方法，为日后再次上手提供一些支持。</p>
<h2 id="node-js与npm安装">node.js与npm安装</h2>
<p>首先引用官网的话来介绍一下node.js与npm。</p>
<ul>
<li><p><a href="http://nodejs.org/" target="_blank" rel="external">node.js</a>:</p>
<blockquote>
<p>Node.js® is a platform built on Chrome’s JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.</p>
</blockquote>
</li>
<li><p><a href="https://www.npmjs.com/" target="_blank" rel="external">npm</a>:</p>
<blockquote>
<p>npm is the package manager for node .</p>
</blockquote>
</li>
</ul>
<p>本人Win8.1-64位系统，Windows的Node.js安装包安装里包含了npm。安装方法非常简单，从node.js官网下载对应版本的msi安装文件安装即可。</p>
<h2 id="MongoDB安装">MongoDB安装</h2>
<ul>
<li><a href="http://www.mongodb.org/" target="_blank" rel="external">MongoDB</a><blockquote>
<p>MongoDB是一种文件导向数据库管理系统，由C++撰写而成，以此来解决应用程序开发社区中的大量现实问题。——维基百科</p>
</blockquote>
</li>
</ul>
<p>安装方法:</p>
<ol>
<li>官网下载安装包进行安装。</li>
<li>将MongoDB/bin文件夹添加至系统PATH环境变量。</li>
<li>安装目录下新建mongo.config配置文件，配置data和log目录。<pre><code> <span class="comment">##store data here</span>
 <span class="variable">dbpath=</span>D:\mongodb\data 
 <span class="comment">##all output go here</span>
 <span class="variable">logpath=</span>D:\mongodb\log\mongo.log 
 <span class="comment">##log read and write operations</span>
 <span class="variable">diaglog=</span><span class="number">3</span>
</code></pre></li>
<li><p>启动MongoDB。<br>预配置：</p>
<pre><code> &gt;mongod --config D:\mongodb\mongo.config
 <span class="keyword">...</span>
 &gt;mongo
 MongoDB shell version: <span class="number">2.6</span><span class="number">.6</span>
 connecting to: test
</code></pre></li>
<li><p>添加至Windows本地服务，这样就可以随机器开机启动了。</p>
<pre><code> &gt; <span class="comment">mongod</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">config</span> <span class="comment">D:\mongodb\mongo</span><span class="string">.</span><span class="comment">config</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">install</span>
</code></pre></li>
<li>简单的测试操作。以下代码执行了创建（转换）数据库，添加数据，查找并显示数据的操作。<pre><code> &gt;mongo
 MongoDB shell version: <span class="number">2.6</span><span class="number">.6</span>
 connecting to: test
 &gt;use usercollection
 swiched to db usercollection
 &gt;db.usercollection.insert({ “username”:“testuser1″,“email”:“testuser1@testdomain.com” })
 <span class="keyword">...</span>
 &gt;db.usercollection.find().pretty()
 <span class="keyword">...</span>
</code></pre></li>
</ol>
<h2 id="Express安装">Express安装</h2>
<ul>
<li><a href="http://www.expressjs.com.cn/" target="_blank" rel="external">Express</a><blockquote>
<p>Express 是一个简洁、灵活的 node.js Web 应用开发框架, 它提供一系列强大的特性，帮助你创建各种 Web 和移动设备应用。</p>
</blockquote>
</li>
</ul>
<p>网上关于Express安装的博客很多，但方法不尽相同。主要差异原因在于Express版本的变化。文章主要参考Express官网指南进行安装，Express版本4.x。</p>
<p>安装方法：</p>
<ol>
<li><p>使用生成器生成。</p>
<pre><code> <span class="variable">$ </span>npm install -g express-generator
</code></pre></li>
<li><p>编辑依赖项。<br>根据项目需求修改package.json文件，在dependencies中添加MongoDB和Monk的依赖：</p>
<pre><code> <span class="string">"mongodb"</span>: <span class="string">"\*"</span>,
 <span class="string">"monk"</span>: <span class="string">"\*"</span>
</code></pre></li>
<li><p>安装。</p>
<pre><code> <span class="variable">$ </span>npm install
</code></pre></li>
<li><p>测试。成功后打开localhost:3000将会显示Express主页。</p>
<pre><code> <span class="variable">$ </span>npm start
</code></pre></li>
<li><p>使用monk连接MongoDB。<br>在app.js中添加以下代码</p>
<pre><code> var mongo = <span class="keyword">require</span>(<span class="string">'mongodb'</span>);
 var monk = <span class="keyword">require</span>(<span class="string">'monk'</span>);
 var db = monk(<span class="string">'localhost:27017/yourdbname'</span>);
 <span class="keyword">...</span>
 app.use(<span class="keyword">function</span>(req,res,<span class="keyword">next</span>){
     req.db = db;
     res.locals.user = req.session.user;
     <span class="keyword">next</span>();
 });
</code></pre></li>
<li><p>后端调用数据库方法</p>
<pre><code> <span class="keyword">var</span> db = req.db;
 <span class="keyword">var</span> collection = db.<span class="keyword">get</span>(<span class="string">'usercollection'</span>);
 <span class="comment">//查询</span>
 collection.find({email:req.body.email,password:req.body.password},{},<span class="function"><span class="keyword">function</span><span class="params">(e,docs)</span></span>{});
 <span class="comment">//插入</span>
 collection.insert(req.body,<span class="function"><span class="keyword">function</span><span class="params">(err,doc)</span></span>{});
 <span class="comment">//更新</span>
 collection.update({email:req.body.olduser.email},req.body.newuser,{safe:<span class="literal">true</span>},<span class="function"><span class="keyword">function</span><span class="params">(e,docs)</span></span>{});
 <span class="comment">//删除</span>
 collection.remove({email:req.body.email},{safe:<span class="literal">true</span>},<span class="function"><span class="keyword">function</span><span class="params">(e,docs)</span></span>{});
</code></pre></li>
</ol>
<p>使用monk操作MongoDB的方法在网上并没有查阅到相关文档，也许是我查找的方式不对。另一种方法是使用mongoose操作，资料较全。</p>
<h2 id="Angular安装">Angular安装</h2>
<ul>
<li><a href="http://www.ngnice.com/" target="_blank" rel="external">Angular</a><blockquote>
<p>AngularJS是一款开源JavaScript函式库，由Google维护，用来协助单一页面应用程序运行的。它的目标是透过MVC模式（MVC）功能增强基于浏览器的应用，使开发和测试变得更加容易。——维基百科</p>
</blockquote>
</li>
</ul>
<p>官网和百科上对Angular的解释一如既往的深入难懂，但估计大部分小白第一次接触Angular只是被大牛告诉Angular出色的<strong>双向数据绑定</strong>的功能。快速了解Angular可以参考文末文章《怎样快速的学习AngularJS》。</p>
<p>Angular和Bootstrap不算是安装了，在前端添加依赖就可（也可以用npm、bower类似的工具进行配置与管理）。js和css包可以在官网下载。</p>
<p>Express安装完成后，在目录中添加App文件夹存放前端文件，修改默认启动入口，删除Express中不需要的文件与文件夹。</p>
<h2 id="Ending">Ending</h2>
<p>MEAN架构的优势主要在于前段后端的一体化，被誉为前端工程师的福音。在学习的过程中也接触到许多项目生成方法如：</p>
<ol>
<li><a href="http://mean.io/" target="_blank" rel="external">mean.io</a></li>
<li>基于<a href="http://yeoman.io/" target="_blank" rel="external">Yeoman</a>生成器，如generator-meanstack</li>
</ol>
<p>不多作为初学者，而且目标系统也很简单轻小，因此没有一开始就上手这种方法。以后有机会可以尝试。</p>
<p>最后的最后，感谢一下给予帮助的博客文章们：</p>
<ol>
<li><a href="http://www.jdon.com/idea/js/mean.html" target="_blank" rel="external">什么是MEAN全堆栈javascript开发框架</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/views/web/libraryview.jsp?sort_by=&amp;show_abstract=true&amp;show_all=&amp;search_flag=&amp;contentarea_by=Web+development&amp;search_by=%E7%B2%BE%E9%80%9A+MEAN&amp;topic_by=-1&amp;type_by=%E6%89%80%E6%9C%89%E7%B1%BB%E5%88%AB&amp;ibm-search=%E6%90%9C%E7%B4%A2" target="_blank" rel="external">IBM文档库：精通MEAN系列</a>(推荐)</li>
<li><a href="http://www.toolmao.com/nodejs-express-ejs-mongodb-server" target="_blank" rel="external">从零开始搭建Node.js, Express, Ejs, Mongodb服务器</a></li>
<li><a href="http://xuyuan923.github.io/2014/08/05/node-mongodb-tutorial/" target="_blank" rel="external">Node+Express+Mongodb+monk简易入门教程</a></li>
<li><a href="http://www.mkyong.com/mongodb/how-to-install-mongodb-on-windows/" target="_blank" rel="external">How To Install MongoDB On Windows</a></li>
<li><a href="http://blog.fens.me/series-nodejs/" target="_blank" rel="external">从零开始NodeJs系列文章</a>(推荐)</li>
<li><a href="https://cnodejs.org/topic/53f23e198f44dfa35129c43b" target="_blank" rel="external">使用express4.x版和Jade模板重写《nodejs开发指南》微博实例</a></li>
<li><a href="http://www.zouyesheng.com/angular.html" target="_blank" rel="external">Angular学习笔记</a></li>
<li><a href="http://www.ngnice.com/posts/205af1ea1e13d2" target="_blank" rel="external">怎么样快速入门AngularJS</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2>
<p>最近尝试接触Web后端技术，看了看基于Java、Python、Nodejs的各种框架，最终选择了MEAN架构进行学习，理由主要包括三个方面：</p>
<ol>
<li>轻量级，入门门槛低。</li>
<li>框架成熟，可参考资料多。<]]>
    </summary>
    
      <category term="MEAN" scheme="http://yxcvincent.github.io/tags/MEAN/"/>
    
      <category term="Angular" scheme="http://yxcvincent.github.io/tags/Angular/"/>
    
      <category term="Express" scheme="http://yxcvincent.github.io/tags/Express/"/>
    
      <category term="MongoDB" scheme="http://yxcvincent.github.io/tags/MongoDB/"/>
    
      <category term="Nodejs" scheme="http://yxcvincent.github.io/tags/Nodejs/"/>
    
      <category term="技术" scheme="http://yxcvincent.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2014年终总结]]></title>
    <link href="http://yxcvincent.github.io/2014/12/31/2014%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://yxcvincent.github.io/2014/12/31/2014年终总结/</id>
    <published>2014-12-31T06:49:05.000Z</published>
    <updated>2015-01-12T13:12:18.000Z</updated>
    <content type="html"><![CDATA[<p>齐家立业平天下，24岁注定是不平凡的一年。转眼年末，做一份年终总结，用以纠错思过，改邪归正。</p>
<h2 id="Experience">Experience</h2>
<h3 id="科研">科研</h3>
<ul>
<li>发表ICSS会议论文一篇。</li>
<li>发表清华学报期刊论文一篇。</li>
<li>开发2个信息系统，申请2项软件著作权。</li>
</ul>
<h3 id="社工">社工</h3>
<p>卸任清华大学校团委科创中心副主任，结束为期五年的科创生活，回首过往，历历在目，感慨万千。本学期在任期间：</p>
<ul>
<li>建档建制，固本培元——负责清华大学累进支持基金，归档建制，支持近百个学生课外科技项目。</li>
<li>星星之火，可以燎原——负责本科生暑期海外研修支持计划，支持百余名非星火班同学分赴世界各地交流游学。</li>
<li>求全求新，求精求行——负责科创中心信息化工作，开发科创中心信息化管理平台。</li>
<li>获首都高校“先锋杯”优秀基层团干部称号。</li>
</ul>
<h3 id="创业">创业</h3>
<ul>
<li>完美前程，高校专业垂直搜索与咨询服务平台。联合创始人，天使轮，负责线上产品设计与前端开发。</li>
<li>尚评，新型互动娱乐广告平台。联合创始人，天使轮，负责产品设计与前端开发。</li>
</ul>
<h3 id="工作">工作</h3>
<ul>
<li>阿里巴巴互动游戏事业部暑期实习2个月。</li>
<li>校招季主投北京的国企与互联网民企，完成10家单位面试，拿到阿里、电子科学研究院、航天二院、豌豆荚4个Offer。</li>
</ul>
<h2 id="Skills">Skills</h2>
<ul>
<li>GXT，实验室项目信息系统开发所用技术，适合MIS的开发，并不十分主流。</li>
<li>Web前端，感谢徐阳大神帮助入门，开始逐渐接触Bootstrap、Backbone、Angular等前端框架。</li>
<li>Web后端，接触基于Python的Web开发框架如flask，等待上手练习。</li>
<li>Markdown，开始尝试使用markdown进行文本编辑。</li>
</ul>
<h2 id="Tools">Tools</h2>
<h3 id="硬">硬</h3>
<ul>
<li>入手ThinkPad笔记本一台，港货T440p，前任IdeaPad Y450享年4岁。</li>
<li>入手华为P6一只，8G容量在校招季略显吃力。</li>
<li>入手天猫魔盒1s一个，寄存在家里目前还未开封。</li>
<li>入手128G SSD一个。</li>
<li>入手网球拍一只，Babolat新手拍，赠予妹纸。</li>
</ul>
<h3 id="软">软</h3>
<ul>
<li>虾米音乐，PC与移动端表现均不错，音质较好，推荐。</li>
<li>ColorNote，Google十佳应用，简约美观。</li>
<li>Onenote，PKM工具，同步略慢，移动端略渣，但还是忍不住被它的UI和强大的功能所吸引。</li>
<li>COC，策略类手游，玩了半年多，根本停不下来。</li>
<li>邮箱大师，移动端邮箱工具。</li>
<li>网易云阅读，UI不如鲜果，但支持自由订阅。</li>
<li>Github Pages+Hexo+Google Analytic搭建博客。</li>
<li>简书 一款不错的Markdown在线编辑器。</li>
</ul>
<h2 id="Life">Life</h2>
<h3 id="运动">运动</h3>
<ul>
<li>入手清华综体健身卡，没有保持住一周一次的锻炼频率。</li>
<li>继续预定每周日早的羽毛球长期场，羽毛球技术进入瓶颈期。</li>
<li>开始接触并学习打网球。</li>
</ul>
<h3 id="读书">读书</h3>
<ul>
<li>曼昆经原——了解经济学常识。</li>
<li>人性的弱点——看了一半坚持不下去了，感觉并非所需。</li>
<li>人人都是产品经理——产品经理的第一本书。</li>
<li>启示录——产品经理的圣经。</li>
<li>用户体验的要素——深刻理解“用户体验”。</li>
<li>沸腾的15年——讲述互联网沸腾史，正在看。</li>
</ul>
<h3 id="影音">影音</h3>
<ul>
<li>花事如期，文艺气息略浓厚的一部话剧。</li>
<li>马兰花开，新清华学堂版第二遍。</li>
<li>森林音乐节，邵夷贝、好妹妹、老狼、朴树。</li>
<li>清华大学民乐、军乐新年音乐会。</li>
<li>清华大学新年晚会，不一样的跨年。</li>
<li>我是歌手2，每周五的必看节目，享受为数不多的天籁之音。</li>
<li>爸爸去哪儿了2，论如何做一个好爸爸。</li>
<li>爱情公寓4，逐渐将我的笑点拉低至正常人的水平。</li>
<li>进击的巨人，风格独特，脑洞大开，口味极重。</li>
<li>冰与火之歌第三季，依旧喜欢高智商重口味美剧。</li>
<li>越狱，第三遍看仍然喜欢，陪妹子一起看。</li>
<li>新版三国演义，恶补历史知识。</li>
<li>火影，虽然烂尾但仍然每周跟，看了7年不曾想过有完结的一天。</li>
<li>海贼王，看了十几集，暂时没找到吸引我的点。</li>
<li>电影，so many…我是一个喜欢故事的人。</li>
</ul>
<h3 id="旅游">旅游</h3>
<ul>
<li>元旦和父母香港澳门游，香港澳门的确是一个购物的天堂。</li>
<li>五一和妹子厦门二人浪漫游，我相信不论过多久，我们都不会忘记这次旅行的。</li>
<li>十一和家人日本出国游，第一次出国，高性价比的跟团游~</li>
</ul>
<h2 id="Last">Last</h2>
<ul>
<li>3月10日，迎来24岁本命年，感谢科创小伙伴们的礼物。</li>
<li>3月21日，与你在一起，是我一辈子的幸运。</li>
<li>7月20日，亲人离去，哀愁万千。外婆一路走好。</li>
<li>3月-12月，暑期实习&amp;校招季，终于还是拖到了2015年。新的一年，任重而道远。</li>
</ul>
<h2 id="新的一年">新的一年</h2>
<p>文末，在即将迎来2015年的时刻，给自己提一些希望和要求，望大家监督。</p>
<ol>
<li>身体好是第一生产力，新的一年，早8晚12，坚持跑步与健身，打好羽毛球和网球。</li>
<li>两周为周期执行“计划-执行-反馈”的自我控制。</li>
<li>培养一些习惯：<br>1）齐家为先，多给父母打电话，多陪领导；<br>2）英语不能忘；<br>3）人丑就要多读书；<br>4）作为一个预备产品经理，需要时刻关注资讯、及时整理；<br>5）思考&amp;总结，定期博客分享。</li>
<li>想做的事：<br>1）租个满意的房子；<br>2）创业或技术上有所突破，搞点动静；<br>3）买架钢琴；<br>4）再陪妹子和爹妈旅游一次。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>齐家立业平天下，24岁注定是不平凡的一年。转眼年末，做一份年终总结，用以纠错思过，改邪归正。</p>
<h2 id="Experience">Experience</h2>
<h3 id="科研">科研</h3>
<ul>
<li>发表ICSS会议论文一篇。</li>
<l]]>
    </summary>
    
      <category term="年终总结" scheme="http://yxcvincent.github.io/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
      <category term="计划" scheme="http://yxcvincent.github.io/tags/%E8%AE%A1%E5%88%92/"/>
    
      <category term="生活" scheme="http://yxcvincent.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的第一篇博客]]></title>
    <link href="http://yxcvincent.github.io/2014/12/31/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yxcvincent.github.io/2014/12/31/我的第一篇博客/</id>
    <published>2014-12-31T04:44:00.000Z</published>
    <updated>2014-12-31T06:47:26.000Z</updated>
    <content type="html"><![CDATA[<h2 id="为什么要写博客">为什么要写博客</h2>
<p>2014年是不平凡的一年，随着大学生活步入尾声，校招节奏的逐渐飞起，我也慢慢地脱离了曾经深陷的圈子，开始接触不同的人、不同的生活。真正对博客产生向往是在校招的时候，仔细品读过大神们的博客后，发现在这样一个后博客时代，博客不再追求高PV，不再盲目寻求SEO，它成为一个更加单纯美好的平台。</p>
<p>每个人写博客都有着不尽相同的目的。我开始动笔主要源于：</p>
<ul>
<li><strong>积累</strong>。积累工作与生活当中的所思所想、所学所获。</li>
<li><strong>激励</strong>。激励自己不断阅读，不断学习，不断实践。</li>
<li><strong>交流</strong>。博客圈是一个充满大神的圈子。</li>
<li><strong>分享</strong>。自强不息，也要厚德载物。</li>
</ul>
<p>我的博客生与2014年末，我的第一份工作即将尘埃落定的时候。我希望，它可以伴随我走完十年。</p>
<p>感谢：</p>
<ul>
<li><a href="http://zhuanlan.zhihu.com/cnfeat/19743861" target="_blank" rel="external">你为什么要写博客</a></li>
<li><a href="http://zhuanlan.zhihu.com/cnfeat/19743255" target="_blank" rel="external">我的博客时代</a></li>
</ul>
<h2 id="我的博客内容">我的博客内容</h2>
<p>我的博客主要记录和分享工作和生活中自己<strong>对产品的思考</strong>、<strong>对技术的积累</strong>、和<strong>对生活的感悟</strong>，并不准备碎碎念走文艺路线，也不准备流水账记生活琐事。同时，博客也会定期<strong>转载一些个人认为是精品、有营养的文章</strong>，以提升博客的整体质量，激励阅读，促进交流。</p>
<h2 id="搭建博客">搭建博客</h2>
<p>作为一个工科男，虽然不那么有技术，但也不能放弃治疗。第一篇博客，简单分享一下这两天搭建博客过程当中接触到的产品与技术以及给予我帮助的博客文章。</p>
<h3 id="Github_Pages">Github Pages</h3>
<h4 id="什么是Github_Pages">什么是Github Pages</h4>
<p>不了解Github的请戳：</p>
<ul>
<li><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="external">GotGitHub：GitHub介绍</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git教程-廖雪峰</a></li>
</ul>
<p><a href="https://pages.github.com/" target="_blank" rel="external">github Pages</a>可以被认为是用户编写的、托管在github上的静态网页，用于介绍用户（团队）本身或项目。</p>
<h4 id="为什么用Github_Pages">为什么用Github Pages</h4>
<ul>
<li><strong>实用</strong>。Github Pages稳定、免费，自带版本控制，可控性强。</li>
<li><strong>趋势</strong>。Git是一种趋势，是一个圈子，鼓励自己踏入圈子，学习使用。</li>
<li><strong>装逼</strong>。请原谅我对技术的无知。</li>
</ul>
<h4 id="如何使用Github_Pages">如何使用Github Pages</h4>
<p>参考：</p>
<ul>
<li><a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a></li>
<li><a href="http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html" target="_blank" rel="external">通过GitHub Pages建立个人站点</a></li>
</ul>
<h3 id="Hexo">Hexo</h3>
<h4 id="什么是Hexo">什么是Hexo</h4>
<p><a href="http://hexo.io/" target="_blank" rel="external">hexo</a>是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github上。</p>
<p>引用作者的话：</p>
<blockquote>
<p>快速、简单且功能强大的 Node.js 博客框架。<br>A fast, simple &amp; powerful blog framework, powered by Node.js.</p>
</blockquote>
<h4 id="为什么用Hexo">为什么用Hexo</h4>
<ul>
<li><strong>轻</strong>。轻量级，高扩展性。</li>
<li><strong>简</strong>。没用过Jekyll，据说相比而言Hexo命令更加简单，对中文支持更好。</li>
</ul>
<p>继续引用作者的话：</p>
<blockquote>
<p>不可思议的快速 ─ 只要一眨眼静态文件即生成完成<br>支持 Markdown<br>仅需一道指令即可部署到 GitHub Pages 和 Heroku<br>已移植 Octopress 插件<br>高扩展性、自订性<br>兼容于 Windows, Mac &amp; Linux</p>
</blockquote>
<h4 id="如何使用Hexo">如何使用Hexo</h4>
<p>参考：</p>
<ul>
<li><a href="http://blog.csdn.net/poem_of_sunshine/article/details/29369785" target="_blank" rel="external"> 如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://zipperary.com/2013/05/28/hexo-guide-1/" target="_blank" rel="external">hexo系列教程：（一）hexo介绍</a></li>
<li><a href="http://zipperary.com/2013/05/28/hexo-guide-2/" target="_blank" rel="external">hexo系列教程：（二）搭建hexo博客</a></li>
<li><a href="http://zipperary.com/2013/05/29/hexo-guide-3/" target="_blank" rel="external">hexo系列教程：（三）hexo博客的配置、使用</a></li>
<li><a href="http://zipperary.com/2013/05/30/hexo-guide-4/" target="_blank" rel="external">hexo系列教程：（四）hexo博客的优化技巧</a></li>
<li><a href="http://zipperary.com/2013/06/02/hexo-guide-5/" target="_blank" rel="external">hexo系列教程：（五）hexo博客的优化技巧续</a></li>
</ul>
<h4 id="Pacman主题">Pacman主题</h4>
<p>参考：</p>
<ul>
<li><a href="http://yangjian.me/workspace/introducing-pacman-theme/" target="_blank" rel="external">Pacman主题介绍</a></li>
</ul>
<h3 id="Markdown">Markdown</h3>
<h4 id="什么是Markdown">什么是Markdown</h4>
<p><a href="http://markdown.tw/" target="_blank" rel="external">Markdown</a>的目标是实现<strong>易读易写</strong>。</p>
<blockquote>
<p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。</p>
</blockquote>
<h4 id="为什么用Markdown">为什么用Markdown</h4>
<p>阳志平的博客对Markdown有着全面的介绍：</p>
<blockquote>
<p>Markdown让我们专注写作，而不是关注排版</p>
</blockquote>
<p>参考：</p>
<ul>
<li><a href="http://www.yangzhiping.com/tech/r-markdown-knitr.html" target="_blank" rel="external">Markdown写作浅谈</a></li>
<li><a href="http://apple4us.com/2012/02/why-writers-should-use-markdown/" target="_blank" rel="external">为什么作家应该用 Markdown 保存自己的文稿</a></li>
<li><a href="http://www.douban.com/note/221187015/" target="_blank" rel="external">為什麼文科生也該用markdown寫作?</a></li>
</ul>
<h4 id="如何使用Markdown">如何使用Markdown</h4>
<p>参考：</p>
<ul>
<li><a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">简书：献给写作者的 Markdown 新手指南</a></li>
<li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown 语法说明</a></li>
<li><a href="http://www.jianshu.com/c/BDu5F8" target="_blank" rel="external">简书：Markdown专题</a></li>
</ul>
<h4 id="简书与Markdown编辑器">简书与Markdown编辑器</h4>
<p>Markdown的语法学起来不需半个小时，但是一款好的Markdown编辑器却是半天也难寻。本博客文章采用基于Web的<a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a>进行编辑。简书UI简约美观，功能齐全，同时它也融合了社交、阅读等元素，已经不仅仅是一款编辑器。</p>
<p>使用Markdown的另一个原因也是因为基于Windows的平台，选择Web在线编辑器是一个轻简合适的方案。Mac或Android用户可以参考以下博客挑选合适的编辑器。</p>
<p>参考：</p>
<ul>
<li><a href="http://www.jianshu.com/p/dcffb6f60fe2" target="_blank" rel="external">Markdown编辑器之比较</a></li>
<li><a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/" target="_blank" rel="external">每周一软之 Markdown 笔记软件 Ulysses III</a></li>
</ul>
<p>感谢以上所有文章作者。</p>
<h2 id="知识共享">知识共享</h2>
<p>本博客内所有文章采用<a href="http://creativecommons.org/licenses/by-nc-nd/3.0/cn/" target="_blank" rel="external">知识共享署名-非商业性使用-禁止演绎 3.0 许可协议</a>进行许可。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="为什么要写博客">为什么要写博客</h2>
<p>2014年是不平凡的一年，随着大学生活步入尾声，校招节奏的逐渐飞起，我也慢慢地脱离了曾经深陷的圈子，开始接触不同的人、不同的生活。真正对博客产生向往是在校招的时候，仔细品读过大神们的博客后，发现在这样一个后博客时代]]>
    </summary>
    
      <category term="Blog" scheme="http://yxcvincent.github.io/tags/Blog/"/>
    
      <category term="Github" scheme="http://yxcvincent.github.io/tags/Github/"/>
    
      <category term="Hexo" scheme="http://yxcvincent.github.io/tags/Hexo/"/>
    
      <category term="Markdown" scheme="http://yxcvincent.github.io/tags/Markdown/"/>
    
      <category term="技术" scheme="http://yxcvincent.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
